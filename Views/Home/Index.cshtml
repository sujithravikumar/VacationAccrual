@model VacationAccrual.Models.VacationAccrualViewModel
<div style="text-align:center"><h3>Vacation (PTO) Accrual Forecast Calculator</h3></div>
<br />
@using(Html.BeginForm())
{
    <div style="text-align:center">
        <label>Current Pay Period Startdate:</label>&nbsp;
        @Html.DropDownListFor(m => m.SelectedStartDate, Model.StartDateList)
        <label>Max Balance Limit:</label>&nbsp;
        @Html.TextBoxFor(m => m.MaxBalance, new { @maxlength = "3", @class = "textbox"})
        <label>Pay Periods:</label>&nbsp;
        @Html.DropDownListFor(m => m.SelectedPeriods, Model.Periods)
        <br /><br />
        <label>Accrual:</label>&nbsp;
        @Html.TextBoxFor(m => m.Accural, new { @maxlength = "4", @class = "textbox"})
        <label>Previous Pay Period Balance:</label>&nbsp;
        @Html.TextBoxFor(m => m.Balance, new { @maxlength = "6", @class = "textbox"})
        <input id="submitBtn" type="submit" value="Submit" class="btn btn-default" />
    </div>
    <br />
    if (Model != null && Model.PeriodList !=null) 
    {
        <table id="periodsTbl" align="center" class="table table-striped table-hover">
            <thead> 
                <tr>
                    <th>Period</th>
                    <th>Accural</th>
                    <th>Take</th>
                    <th>Balance</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model.PeriodList)
                    {
                        <tr>
                            <td>@item.Period</td>
                            <td class="accural">@item.Accural</td>
                            <td>@Html.TextBoxFor(m => item.Take, new { @maxlength = "4", @class = "take" })</td>
                            <td class="balance">@item.Balance</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    }
}
@section Scripts {
    <script>
        $(document).ready(function(){
            $("#periodsTbl td:nth-child(4)").each(function () {
                if (parseInt($(this).text()) >= @Model.MaxBalance) {
                    $(this).parent().addClass('danger');
                    $(this).addClass('red');
                }
            });
        });
    </script>
    <script>
        $(document).ready(function(){
            $("#periodsTbl input").on('input', function(){
                var accural;
                var take;
                var balance;
                $("#periodsTbl tr").each(function (index) {
                    take = parseFloat($(this).find(".take").val());
                    if(isNaN(take)) {
                        take = 0;
                    }
                    if(index > 0) {
                        if(index == 1) {
                            accural = parseFloat($(this).find(".accural").text());
                            balance = parseFloat($(this).find(".balance").text());
                            balance = balance - take;
                        }
                        else {
                            balance = balance + accural - take;
                        }
                        $(this).find(".balance").text(balance.toFixed(2));
                    }
                });
                $("#periodsTbl td:nth-child(4)").each(function () {
                    if (parseInt($(this).text()) >= @Model.MaxBalance) {
                        $(this).parent().addClass('danger');
                        $(this).addClass('red');
                    }
                    else {
                        $(this).parent().removeClass('danger');
                        $(this).removeClass('red');
                    }
                });
            });
        });
    </script>
}